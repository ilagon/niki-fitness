// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./database/niki-fitness.db"
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  exercises Exercise[]
  routines  Routine[]
}

model Exercise {
  id       Int     @id @default(autoincrement())
  name     String  @unique
  type     String?
  focus    String?
  weight   String?
  reps     String?
  time     String?
  sets     String?
  imageUrl String?

  // Relations
  createdBy   User              @relation(fields: [createdById], references: [id])
  createdById Int
  routines    RoutineExercise[]
}

model Routine {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  createdBy   User              @relation(fields: [createdById], references: [id])
  createdById Int
  exercises   RoutineExercise[]
}

model RoutineExercise {
  id         Int      @id @default(autoincrement())
  routine    Routine  @relation(fields: [routineId], references: [id])
  routineId  Int
  exercise   Exercise @relation(fields: [exerciseId], references: [id])
  exerciseId Int

  // Unique constraint to prevent duplicate pairs
  @@unique([routineId, exerciseId])
}
